@import url('https://fonts.googleapis.com/css2?family=League+Spartan:wght@700&display=swap');
@import "./_themes.scss";

$default-margin: 0;
$default-padding: 0;
$all-screen-height: 100vh;

* {
  margin: $default-margin;
  padding: $default-padding;
  box-sizing: border-box;
}

html, body, #root {
  height: $all-screen-height;
}

body {
  $min-key-width: 65px;
  $max-key-width: 100px;
  $key-height: 65px;
  $keyboard-gap: 24px;
  $keyboard-padding: 24px;

  .app {

    @include set-theme($theme-1);

    &.theme-2 {
      @include set-theme($theme-2);
    }

    &.theme-3 {
      @include set-theme($theme-3);
    }

    font-family: 'League Spartan', sans-serif;
    font-size: 32px;

    width: 100%;
    height: 100vh;

    overflow: auto;
    padding: 24px;

    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: flex-start;

    background-color: var(--main-bg);

    .container {
      $container-min-width: 380px;

      display: flex;
      flex-direction: column;
      gap: 24px;
      width: clamp($container-min-width, 90vw, 540px);

      margin-left: auto;
      margin-right: auto;

      header {
        $single-theme-switch-size: 16px;
        $theme-switcher-pad: 8px;
        $theme-switcher-gap: 8px;

        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;

        label {
          color: var(--display-text);
        }

        .switching-themes {
          position: relative;

          display: flex;
          flex-direction: row;
          align-items: center;
          gap: 32px;

          .desc-label {
            align-self: end;

            label {
              font-size: 0.4em;
              text-transform: uppercase;
              letter-spacing: 0.15em;
            }
          }

          .switcher-container  {
            display: flex;
            flex-direction: column;

            .switcher-labels {
              display: flex;
              flex-direction: row;
              justify-content: space-around;

              label {
                font-size: 0.5em;
              }
            }

            .switcher {
              width: calc(var(--total) * $single-theme-switch-size + 2 * $theme-switcher-pad + (var(--total) - 1) * $theme-switcher-gap);
              height: calc($single-theme-switch-size + 2 * $theme-switcher-pad);

              position: relative;
              padding: $theme-switcher-pad;

              border-radius: calc(2 * $theme-switcher-pad);
              background-color: var(--toggle-bg);

              .circle, .tumbler {
                position: absolute;
                width: $single-theme-switch-size;
                height: $single-theme-switch-size;
                margin: $theme-switcher-pad;
                left: calc(var(--current) * ($single-theme-switch-size + $theme-switcher-gap));
                top: 0;
                border-radius: 50%;
                border: none;
                display: inline-block;
                cursor: pointer;
              }

              .tumbler {
                background-color: var(--toggle);
              }
            }
          }
        }
      }

      .display {
        display: block;
        background-color: var(--display-bg);
        color: var(--display-text);
        font-size: 2.5em;
        border-radius: 8px;

        text-align: right;
        padding: 40px 32px;
        width: 100%;
      }

      .keyboard {
        background-color: var(--keypad-bg);
        padding: 24px;
        border-radius: 8px;

        display: flex;
        flex-direction: column;
        gap: $keyboard-gap;

        .keyboard-row {
          display: inline-flex;
          flex-direction: row;
          align-items: flex-end;
          gap: $keyboard-gap;

          .key {
            flex: 1 1;

            $key-shadow-size: 4px;

            border-radius: 8px;
            padding: 8px;

            width: clamp($min-key-width, 15vw, $max-key-width);
            height: $key-height;

            transition: box-shadow 150ms ease, height 150ms ease;

            display: flex;
            justify-content: center;
            align-items: center;

            @mixin bottom-shadow($size, $color) {
              box-shadow: inset 0 #{-$size} 0 $color;
            }

            @mixin key-background($color, $hover-color) {
              background-color: $color;

              &:hover {
                background-color: $hover-color;
              }
            }

            @include key-background(var(--key-bg), var(--key-hover-bg));
            
            &:not(:active) {
              @include bottom-shadow($key-shadow-size, var(--key-shadow));
            }

            &:active {
              height: $key-height - $key-shadow-size;
            }

            &.eq {
              --key-bg: var(--eq-key-bg);
              --key-hover-bg: var(--eq-key-hover-bg);
              --key-shadow: var(--eq-key-shadow);
              --key-color: var(--eq-key-color);
            }

            &.reset, &.del {
              --key-bg: var(--spec-key-bg);
              --key-hover-bg: var(--spec-key-hover-bg);
              --key-shadow: var(--spec-key-shadow);
              --key-color: var(--spec-key-color);
            }

            &:hover {
              cursor: pointer;
            }

            label {
              text-align: center;
              text-transform: uppercase;
              pointer-events: none;
              color: var(--key-color);
            }

            &.mul label {
              text-transform: none;
            }
          }
        }
      }
    }
  }
}

.non-selectable {
  user-select: none;
}

.theme-changing {
  &, & * {
    transition: all 300ms ease !important;
  }
}
